{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_ABC","SORT_LENGTH","App","useState","sortBy","setSortBy","reversed","setReversed","sortedList","goods","sortField","preparedGoods","sort","good1","good2","localeCompare","length","reverse","sortFunc","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAW,MACXC,EAAc,SA2BPC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACMC,EA5BS,SAACC,EAAOC,EAAWJ,GAClC,IAAMK,EAAa,YAAOF,GAqB1B,OAnBIC,GACFC,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQJ,GACN,KAAKV,EACH,OAAOa,EAAME,cAAcD,GAE7B,KAAKb,EACH,OAAOY,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXV,GACFK,EAAcM,UAGTN,EAMYO,CACjBnB,EACAK,EACAE,GAQF,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,iBAAkB,CAC9B,WAAYjB,IAAWJ,IAEzBsB,QAAS,kBAAMjB,EAAUL,IAL3B,iCAUA,wBACEoB,KAAK,SACLD,UAAWE,IAAG,oBAAqB,CACjC,WAAYjB,IAAWH,IAEzBqB,QAAS,kBAAMjB,EAAUJ,IAL3B,4BAUA,wBACEmB,KAAK,SACLD,UAAS,6BAAwBb,GAAa,YAC9CgB,QAAS,kBAAMf,GAAaD,IAH9B,sBAQEF,GAAUE,IACV,wBACEc,KAAK,SACLD,UAAU,4BACVG,QAxCQ,WAChBjB,EAAU,IACVE,GAAY,IAmCN,sBAUJ,6BACGC,EAAWe,KAAI,SAAAC,GAAI,OAClB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YCrGnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.06e7b4dd.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_ABC = 'abc';\nconst SORT_LENGTH = 'length';\n\nconst sortFunc = (goods, sortField, reversed) => {\n  const preparedGoods = [...goods];\n\n  if (sortField) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortField) {\n        case SORT_ABC:\n          return good1.localeCompare(good2);\n\n        case SORT_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n};\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [reversed, setReversed] = useState(false);\n  const sortedList = sortFunc(\n    goodsFromServer,\n    sortBy,\n    reversed,\n  );\n\n  const resetFunc = () => {\n    setSortBy('');\n    setReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortBy !== SORT_ABC,\n          })}\n          onClick={() => setSortBy(SORT_ABC)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortBy !== SORT_LENGTH,\n          })}\n          onClick={() => setSortBy(SORT_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={`button is-warning ${!reversed && ('is-light')}`}\n          onClick={() => setReversed(!reversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || reversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetFunc}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {sortedList.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}